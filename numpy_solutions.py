# -*- coding: utf-8 -*-
"""Numpy_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12GCpbeKHBDUv0f0dZygYb6xyFD76yHan
"""

# a.Импортируйте библиотеку NumPy
import numpy as np

# b.Создайте массив из 10 нулей
z = np.zeros(10)
print(z)

# c.Создать массив из 10 единиц
c = np.full(10, 1)
print(c)

# d.Создать массив из 10 пятерок
c1 = np.full(10, 5)
print(c1)

# e.Создать массив из целых чисел от 10 до 50

array=np.arange(10,51)
print(array)

# f.Создать массив из четных чисел от 10 до 50
array=np.arange(10,51,2)
print(array)

# g.Создать матрицу 3х3 с числами от 0 до 8
h = np.arange(9).reshape(3,3)
print(h)

# h.Создать единичную матрицу 3x3
z = np.eye(3)
print(z)

# i. Используйте NumPy для генерации случайного числа от 0 до 1
rand_num = np.random.normal(0,1,1)
print(rand_num)

# j.Используйте NumPy для генерации массива из 25 случайных чисел,взятых из стандартного нормального распределения
rand_num = np.random.normal(0,1,25)
print(rand_num)

# k.Создайте следующую матрицу используя функции библиотеки NumPy:
import numpy as np
a=np.arange(0.01,1.01,0.01).reshape(10,10)
print(a)

# Дана стартовая матрица/ Эта матрица будет использоваться в последующих задачах# это наша стартовая матрица.
mat = np.arange(1,26).reshape(5,5)
print(mat)

# l.Написать код, который вернет следующую матрицу из стартовой:

print(mat[2:,1:])

#m. Написать код обращения к элементу который вернет значение  20 изстартовой матрицы задачи l.
import numpy as np
mat = np.arange(1,26).reshape(5,5)
print(mat[3,4])

# n.Написать код к стартовой матрице задачи l , который воспроизводит вывод, показанный ниже
import numpy as np
mat = np.arange(1,26).reshape(5,5)
print(mat[0:3,1:2])

# o.Написать код к стартовой матрице задачи l , который воспроизводит вывод, показанный ниже
print(mat[4:])

# p.Написать код к стартовой матрице задачи l , который воспроизводитвывод, показанный ниже
print(mat[3:])

# q.Получить сумму всех значений в стартовой матрице mat
print(np.sum(mat))

#r. Получить стандартное отклонение в стартовой матрице mat
print(np.std(mat))

#s.Получить сумму значений в колонках в стартовой матрице mat
print(np.sum(mat, axis = 0))